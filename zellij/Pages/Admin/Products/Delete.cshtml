@page
@model zellij.Pages.Admin.Products.DeleteModel
@{
    ViewData["Title"] = "Delete Product";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-trash text-danger me-2"></i>Delete Product</h1>
    <a asp-page="./Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left me-1"></i>Back to Products
    </a>
</div>

<div class="alert alert-danger">
    <i class="fas fa-exclamation-triangle me-2"></i>
    <strong>Warning!</strong> This action cannot be undone. Are you sure you want to delete this product?
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card border-danger">
            <div class="card-header bg-danger text-white">
                <h5><i class="fas fa-trash me-2"></i>Product to Delete</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">Name:</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.Name)</dd>
                    
                    <dt class="col-sm-3">Type:</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.MarbleType)</dd>
                    
                    <dt class="col-sm-3">Origin:</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.Origin)</dd>
                    
                    <dt class="col-sm-3">Color:</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.Color)</dd>
                    
                    <dt class="col-sm-3">Description:</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.Description)</dd>
                    
                    <dt class="col-sm-3">Price:</dt>
                    <dd class="col-sm-9">$@Html.DisplayFor(model => model.Product.Price)</dd>
                    
                    <dt class="col-sm-3">Dimensions:</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.Dimensions)</dd>
                    
                    <dt class="col-sm-3">Finish:</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.Finish)</dd>
                    
                    <dt class="col-sm-3">Stock Quantity:</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.StockQuantity) units</dd>
                    
                    <dt class="col-sm-3">In Stock:</dt>
                    <dd class="col-sm-9">
                        @if (Model.Product.InStock)
                        {
                            <span class="badge bg-success">Yes</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">No</span>
                        }
                    </dd>
                    
                    <dt class="col-sm-3">Created:</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.CreatedDate)</dd>
                    
                    @if (Model.Product.ModifiedDate.HasValue)
                    {
                        <dt class="col-sm-3">Last Modified:</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.ModifiedDate)</dd>
                    }
                </dl>
                
                <form method="post" class="mt-4">
                    <input type="hidden" asp-for="Product.Id" />
                    <div class="d-flex justify-content-between">
                        <a asp-page="./Index" class="btn btn-secondary">
                            <i class="fas fa-times me-1"></i>Cancel
                        </a>
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash me-1"></i>Delete Product
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        @if (!string.IsNullOrEmpty(Model.Product.ImageUrl))
        {
            <div class="card">
                <div class="card-header">
                    <h6><i class="fas fa-image me-2"></i>Product Image</h6>
                </div>
                <div class="card-body text-center">
                    <img src="@Model.Product.ImageUrl" alt="@Model.Product.Name" class="img-fluid rounded" style="max-height: 300px;" />
                </div>
            </div>
        }
        
        <div class="card mt-3 border-warning">
            <div class="card-header bg-warning">
                <h6><i class="fas fa-exclamation-triangle me-2"></i>Deletion Impact</h6>
            </div>
            <div class="card-body">
                <ul class="list-unstyled mb-0">
                    <li><i class="fas fa-times text-danger me-2"></i>Product will be permanently removed</li>
                    <li><i class="fas fa-times text-danger me-2"></i>Cannot be recovered</li>
                    <li><i class="fas fa-times text-danger me-2"></i>All product data will be lost</li>
                </ul>
            </div>
        </div>
    </div>
</div>