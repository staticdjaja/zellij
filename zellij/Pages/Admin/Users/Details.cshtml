@page
@model zellij.Pages.Admin.Users.DetailsModel
@{
    ViewData["Title"] = "User Details";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-user me-2"></i>User Details</h1>
    <a asp-page="./Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left me-1"></i>Back to Users
    </a>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-info-circle me-2"></i>@Model.AppUser.UserName</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">User ID:</dt>
                    <dd class="col-sm-9"><code>@Model.AppUser.Id</code></dd>
                    
                    <dt class="col-sm-3">Username:</dt>
                    <dd class="col-sm-9">@Model.AppUser.UserName</dd>
                    
                    <dt class="col-sm-3">Email:</dt>
                    <dd class="col-sm-9">
                        @Model.AppUser.Email
                        @if (Model.AppUser.EmailConfirmed)
                        {
                            <span class="badge bg-success ms-2"><i class="fas fa-check"></i> Verified</span>
                        }
                        else
                        {
                            <span class="badge bg-warning ms-2"><i class="fas fa-clock"></i> Unverified</span>
                        }
                    </dd>
                    
                    <dt class="col-sm-3">Phone Number:</dt>
                    <dd class="col-sm-9">
                        @if (!string.IsNullOrEmpty(Model.AppUser.PhoneNumber))
                        {
                            @Model.AppUser.PhoneNumber
                            @if (Model.AppUser.PhoneNumberConfirmed)
                            {
                                <span class="badge bg-success ms-2"><i class="fas fa-check"></i> Verified</span>
                            }
                            else
                            {
                                <span class="badge bg-warning ms-2"><i class="fas fa-clock"></i> Unverified</span>
                            }
                        }
                        else
                        {
                            <span class="text-muted">Not provided</span>
                        }
                    </dd>
                    
                    <dt class="col-sm-3">Two Factor Auth:</dt>
                    <dd class="col-sm-9">
                        @if (Model.AppUser.TwoFactorEnabled)
                        {
                            <span class="badge bg-success"><i class="fas fa-shield-alt"></i> Enabled</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary"><i class="fas fa-shield-alt"></i> Disabled</span>
                        }
                    </dd>
                    
                    <dt class="col-sm-3">Lockout Status:</dt>
                    <dd class="col-sm-9">
                        @if (Model.AppUser.LockoutEnd.HasValue && Model.AppUser.LockoutEnd > DateTimeOffset.Now)
                        {
                            <span class="badge bg-danger"><i class="fas fa-lock"></i> Locked until @Model.AppUser.LockoutEnd.Value.ToString("MMM dd, yyyy HH:mm")</span>
                        }
                        else
                        {
                            <span class="badge bg-success"><i class="fas fa-unlock"></i> Active</span>
                        }
                    </dd>
                    
                    <dt class="col-sm-3">Lockout Enabled:</dt>
                    <dd class="col-sm-9">
                        @if (Model.AppUser.LockoutEnabled)
                        {
                            <span class="badge bg-warning">Yes</span>
                        }
                        else
                        {
                            <span class="badge bg-info">No</span>
                        }
                    </dd>
                    
                    <dt class="col-sm-3">Failed Login Attempts:</dt>
                    <dd class="col-sm-9">
                        <span class="badge @(Model.AppUser.AccessFailedCount > 0 ? "bg-warning" : "bg-success")">
                            @Model.AppUser.AccessFailedCount
                        </span>
                    </dd>
                    
                    <dt class="col-sm-3">Roles:</dt>
                    <dd class="col-sm-9">
                        @if (Model.UserRoles.Any())
                        {
                            @foreach (var role in Model.UserRoles)
                            {
                                <span class="badge @(role == "Admin" ? "bg-danger" : "bg-primary") me-1">@role</span>
                            }
                        }
                        else
                        {
                            <span class="text-muted">No roles assigned</span>
                        }
                    </dd>
                </dl>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6><i class="fas fa-user-circle me-2"></i>User Avatar</h6>
            </div>
            <div class="card-body text-center">
                <div class="bg-light rounded-circle d-inline-flex align-items-center justify-content-center" style="width: 120px; height: 120px;">
                    <i class="fas fa-user fa-3x text-muted"></i>
                </div>
                <p class="mt-3 mb-0 text-muted">@Model.AppUser.UserName</p>
            </div>
        </div>
        
        <div class="card mt-3">
            <div class="card-header">
                <h6><i class="fas fa-chart-line me-2"></i>Account Statistics</h6>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-6">
                        <div class="border-end">
                            <h4 class="text-primary">@Model.AppUser.AccessFailedCount</h4>
                            <small class="text-muted">Failed Logins</small>
                        </div>
                    </div>
                    <div class="col-6">
                        <h4 class="text-success">@Model.UserRoles.Count</h4>
                        <small class="text-muted">Roles</small>
                    </div>
                </div>
            </div>
        </div>
        
        @if (Model.AppUser.UserName != "admin" && Model.AppUser.UserName != User.Identity?.Name)
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h6><i class="fas fa-cog me-2"></i>Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @if (Model.AppUser.LockoutEnd.HasValue && Model.AppUser.LockoutEnd > DateTimeOffset.Now)
                        {
                            <button class="btn btn-success" onclick="unlockUser('@Model.AppUser.Id')">
                                <i class="fas fa-unlock me-1"></i>Unlock User
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-warning" onclick="lockUser('@Model.AppUser.Id')">
                                <i class="fas fa-lock me-1"></i>Lock User
                            </button>
                        }
                        
                        @if (Model.AppUser.AccessFailedCount > 0)
                        {
                            <button class="btn btn-info" onclick="resetFailedLogins('@Model.AppUser.Id')">
                                <i class="fas fa-undo me-1"></i>Reset Failed Logins
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function lockUser(userId) {
            if (confirm('Are you sure you want to lock this user?')) {
                // This would typically make an AJAX call to lock the user
                alert('User lock functionality would be implemented here.');
            }
        }
        
        function unlockUser(userId) {
            if (confirm('Are you sure you want to unlock this user?')) {
                // This would typically make an AJAX call to unlock the user
                alert('User unlock functionality would be implemented here.');
            }
        }
        
        function resetFailedLogins(userId) {
            if (confirm('Are you sure you want to reset failed login attempts for this user?')) {
                // This would typically make an AJAX call to reset failed logins
                alert('Reset failed logins functionality would be implemented here.');
            }
        }
    </script>
}