@page
@model zellij.Pages.Seller.Orders.IndexModel
@using zellij.Models
@{
    ViewData["Title"] = "Order Management";
}

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1><i class="fas fa-clipboard-list me-2"></i>Order Management</h1>
            <a asp-page="/Seller/Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i>Back to Dashboard
            </a>
        </div>

        <!-- Filters and Search -->
        <div class="card mb-4">
            <div class="card-body">
                <form method="get">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-floating">
                                <input asp-for="SearchString" class="form-control" placeholder="Search orders..." />
                                <label asp-for="SearchString">Search by Order #, Customer Name, or Email</label>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-floating">
                                <select name="status" class="form-select">
                                    <option value="">All Statuses</option>
                                    <option value="Pending" selected="@(Model.CurrentFilter == "Pending")">Pending</option>
                                    <option value="Confirmed" selected="@(Model.CurrentFilter == "Confirmed")">Confirmed</option>
                                    <option value="Processing" selected="@(Model.CurrentFilter == "Processing")">Processing</option>
                                    <option value="Shipped" selected="@(Model.CurrentFilter == "Shipped")">Shipped</option>
                                    <option value="Delivered" selected="@(Model.CurrentFilter == "Delivered")">Delivered</option>
                                    <option value="Cancelled" selected="@(Model.CurrentFilter == "Cancelled")">Cancelled</option>
                                </select>
                                <label>Filter by Status</label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <button type="submit" class="btn btn-primary h-100 w-100">
                                <i class="fas fa-search me-1"></i>Search
                            </button>
                        </div>
                        <div class="col-md-2">
                            <a asp-page="./Index" class="btn btn-outline-secondary h-100 w-100">
                                <i class="fas fa-undo me-1"></i>Reset
                            </a>
                        </div>
                        <div class="col-md-1">
                            <div class="text-center">
                                <strong>@Model.Orders.Count</strong><br>
                                <small class="text-muted">Orders</small>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Orders Table -->
        @if (Model.Orders.Any())
        {
            <div class="card">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Order #</th>
                                    <th>Customer</th>
                                    <th>Date</th>
                                    <th>Items</th>
                                    <th>Total</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in Model.Orders)
                                {
                                    <tr>
                                        <td>
                                            <strong>#@order.OrderNumber</strong><br>
                                            <small class="text-muted">@order.OrderDate.ToString("MMM dd, HH:mm")</small>
                                        </td>
                                        <td>
                                            <div>
                                                <strong>@order.User.UserName</strong><br>
                                                <small class="text-muted">@order.User.Email</small>
                                            </div>
                                        </td>
                                        <td>
                                            @order.OrderDate.ToString("MMM dd, yyyy")<br>
                                            <small class="text-muted">@order.OrderDate.ToString("HH:mm")</small>
                                        </td>
                                        <td>
                                            <span class="badge bg-light text-dark">@order.OrderItems.Count items</span><br>
                                            <small class="text-muted">@order.OrderItems.Sum(oi => oi.Quantity) units</small>
                                        </td>
                                        <td>
                                            <strong>$@order.Total.ToString("F2")</strong><br>
                                            @if (order.DiscountAmount > 0)
                                            {
                                                <small class="text-success">-$@order.DiscountAmount.ToString("F2") discount</small>
                                            }
                                        </td>
                                        <td>
                                            @{
                                                var statusInfo = GetStatusInfo(order.Status);
                                            }
                                            <span class="badge @statusInfo.BadgeClass">
                                                <i class="@statusInfo.Icon me-1"></i>@statusInfo.Text
                                            </span>
                                            
                                            <!-- Quick Status Update -->
                                            @if (order.Status != OrderStatus.Delivered && order.Status != OrderStatus.Cancelled)
                                            {
                                                <br>
                                                <div class="btn-group mt-1" role="group">
                                                    @if (order.Status == OrderStatus.Pending)
                                                    {
                                                        <button class="btn btn-sm btn-outline-info" onclick="updateOrderStatus(@order.Id, @((int)OrderStatus.Confirmed))">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                    }
                                                    @if (order.Status == OrderStatus.Confirmed || order.Status == OrderStatus.Pending)
                                                    {
                                                        <button class="btn btn-sm btn-outline-primary" onclick="updateOrderStatus(@order.Id, @((int)OrderStatus.Processing))">
                                                            <i class="fas fa-cog"></i>
                                                        </button>
                                                    }
                                                    @if (order.Status == OrderStatus.Processing)
                                                    {
                                                        <button class="btn btn-sm btn-outline-warning" onclick="updateOrderStatus(@order.Id, @((int)OrderStatus.Shipped))">
                                                            <i class="fas fa-truck"></i>
                                                        </button>
                                                    }
                                                    @if (order.Status == OrderStatus.Shipped)
                                                    {
                                                        <button class="btn btn-sm btn-outline-success" onclick="updateOrderStatus(@order.Id, @((int)OrderStatus.Delivered))">
                                                            <i class="fas fa-check-circle"></i>
                                                        </button>
                                                    }
                                                </div>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a asp-page="./Details" asp-route-id="@order.Id" class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                @if (order.Status == OrderStatus.Pending)
                                                {
                                                    <button class="btn btn-sm btn-outline-danger" onclick="updateOrderStatus(@order.Id, @((int)OrderStatus.Cancelled))">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-body text-center py-5">
                    <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No orders found</h5>
                    @if (!string.IsNullOrEmpty(Model.SearchString) || Model.StatusFilter.HasValue)
                    {
                        <p class="text-muted">Try adjusting your search criteria or filters.</p>
                        <a asp-page="./Index" class="btn btn-primary">
                            <i class="fas fa-undo me-1"></i>Clear Filters
                        </a>
                    }
                    else
                    {
                        <p class="text-muted">Orders will appear here when customers place them.</p>
                    }
                </div>
            </div>
        }
    </div>
</div>

<!-- Hidden form for status updates -->
<form method="post" asp-page-handler="UpdateStatus" id="statusUpdateForm" style="display: none;">
    <input asp-for="OrderId" id="hiddenOrderId" />
    <input asp-for="NewStatus" id="hiddenNewStatus" />
</form>

@functions {
    private (string BadgeClass, string Icon, string Text) GetStatusInfo(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => ("bg-warning text-dark", "fas fa-clock", "Pending"),
            OrderStatus.Confirmed => ("bg-info", "fas fa-check", "Confirmed"),
            OrderStatus.Processing => ("bg-primary", "fas fa-cog", "Processing"),
            OrderStatus.Shipped => ("bg-warning", "fas fa-truck", "Shipped"),
            OrderStatus.Delivered => ("bg-success", "fas fa-check-circle", "Delivered"),
            OrderStatus.Cancelled => ("bg-danger", "fas fa-times", "Cancelled"),
            OrderStatus.Refunded => ("bg-secondary", "fas fa-undo", "Refunded"),
            _ => ("bg-secondary", "fas fa-question", "Unknown")
        };
    }
}

@section Scripts {
    <script>
        function updateOrderStatus(orderId, newStatus) {
            const statusNames = {
                0: 'Pending',
                1: 'Confirmed', 
                2: 'Processing',
                3: 'Shipped',
                4: 'Delivered',
                5: 'Cancelled',
                6: 'Refunded'
            };
            
            if (confirm(`Are you sure you want to update this order status to ${statusNames[newStatus]}?`)) {
                document.getElementById('hiddenOrderId').value = orderId;
                document.getElementById('hiddenNewStatus').value = newStatus;
                document.getElementById('statusUpdateForm').submit();
            }
        }
    </script>
}