@page
@model zellij.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Products - Moroccan Marble Collection";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-box me-2"></i>Our Moroccan Marble Collection</h1>
</div>

<!-- Search and Filter Section -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0"><i class="fas fa-filter me-2"></i>Search & Filter</h5>
    </div>
    <div class="card-body">
        <form method="get">
            <div class="row">
                <div class="col-md-3 mb-3">
                    <label for="searchTerm" class="form-label">Search</label>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                           value="@Model.SearchTerm" placeholder="Search products...">
                </div>
                <div class="col-md-2 mb-3">
                    <label for="origin" class="form-label">Origin</label>
                    <select class="form-select" id="origin" name="origin">
                        <option value="">All Origins</option>
                        <option value="Atlas Mountains" selected="@(Model.SelectedOrigin == "Atlas Mountains")">Atlas Mountains</option>
                        <option value="Rif Mountains" selected="@(Model.SelectedOrigin == "Rif Mountains")">Rif Mountains</option>
                        <option value="Sahara" selected="@(Model.SelectedOrigin == "Sahara")">Sahara</option>
                        <option value="Fez" selected="@(Model.SelectedOrigin == "Fez")">Fez</option>
                    </select>
                </div>
                <div class="col-md-2 mb-3">
                    <label for="color" class="form-label">Color</label>
                    <select class="form-select" id="color" name="color">
                        <option value="">All Colors</option>
                        <option value="White" selected="@(Model.SelectedColor == "White")">White</option>
                        <option value="Green" selected="@(Model.SelectedColor == "Green")">Green</option>
                        <option value="Black" selected="@(Model.SelectedColor == "Black")">Black</option>
                        <option value="Pink" selected="@(Model.SelectedColor == "Pink")">Pink</option>
                        <option value="Beige" selected="@(Model.SelectedColor == "Beige")">Beige</option>
                    </select>
                </div>
                <div class="col-md-2 mb-3">
                    <label for="minPrice" class="form-label">Min Price ($)</label>
                    <input type="number" class="form-control" id="minPrice" name="minPrice" 
                           value="@Model.MinPrice" step="0.01" min="0">
                </div>
                <div class="col-md-2 mb-3">
                    <label for="maxPrice" class="form-label">Max Price ($)</label>
                    <input type="number" class="form-control" id="maxPrice" name="maxPrice" 
                           value="@Model.MaxPrice" step="0.01" min="0">
                </div>
                <div class="col-md-1 mb-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Products Grid -->
@if (Model.Products.Any())
{
    <div class="row">
        @foreach (var product in Model.Products)
        {
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card h-100 product-card">
                    <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 250px;">
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <img src="@product.ImageUrl" alt="@product.Name" class="img-fluid" style="max-height: 100%; max-width: 100%;" 
                                 onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                        }
                        <div class="text-muted text-center" style="display: @(string.IsNullOrEmpty(product.ImageUrl) ? "block" : "none");">
                            <i class="fas fa-image fa-3x mb-2"></i>
                            <br>@product.Name
                        </div>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text flex-grow-1">@product.Description</p>
                        
                        <div class="product-details mb-3">
                            <div class="row g-2">
                                <div class="col-6">
                                    <small class="text-muted">
                                        <i class="fas fa-map-marker-alt me-1"></i>@product.Origin
                                    </small>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted">
                                        <i class="fas fa-palette me-1"></i>@product.Color
                                    </small>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted">
                                        <i class="fas fa-gem me-1"></i>@product.MarbleType
                                    </small>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted">
                                        <i class="fas fa-polish me-1"></i>@product.Finish
                                    </small>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="text-primary mb-0">$@product.Price.ToString("F2")</h4>
                                <small class="text-muted">@product.Dimensions</small>
                            </div>
                            <div class="text-end">
                                @if (product.StockQuantity > 0)
                                {
                                    <span class="badge bg-success mb-1">In Stock (@product.StockQuantity)</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger mb-1">Out of Stock</span>
                                }
                            </div>
                        </div>
                        
                        <div class="mt-3">
                            <a asp-page="./Details" asp-route-id="@product.Id" class="btn btn-outline-primary me-2">
                                <i class="fas fa-eye me-1"></i>View Details
                            </a>
                            @if (product.StockQuantity > 0)
                            {
                                <button type="button" class="btn btn-primary" onclick="addToQuote(@product.Id)">
                                    <i class="fas fa-plus me-1"></i>Add to Quote
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-search fa-3x text-muted mb-3"></i>
        <h3 class="text-muted">No products found</h3>
        <p class="text-muted">Try adjusting your search criteria or browse all products.</p>
        <a asp-page="./Index" class="btn btn-primary">
            <i class="fas fa-refresh me-1"></i>Reset Filters
        </a>
    </div>
}

<style>
.product-card {
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.product-details {
    font-size: 0.9em;
    border-top: 1px solid #eee;
    border-bottom: 1px solid #eee;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
}
</style>

@section Scripts {
    <script>
        function addToQuote(productId) {
            // This would typically send an AJAX request to add the product to a quote
            alert('Product added to quote! (This would be implemented with proper cart functionality)');
        }
    </script>
}